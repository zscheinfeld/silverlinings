.overviewContainer {
  box-sizing: border-box;
  // height: 200vh;
  width: 100vw;
  background-color: #191818;
  padding-bottom: 360px;
  z-index: 900;
  position: relative;
}

.overviewInnerContainer {
  box-sizing: border-box;
  width: 100%;
  // padding-left: 80px;
  // padding-right: 80px;
  max-width: 1280px;
  margin: auto;
}

.overviewHeader {
  font-family: "spectral";
  font-size: 42px;
  line-height: 106%;
  color: white;
  margin-bottom: 24px;
}

.futureContainer {
  padding-bottom: 42px;
}

.futureTitle {
  font-family: "spectral";
  font-size: 20px;
  font-weight: bold;
  color: white;
  border-top: solid white 1px;
  border-bottom: dotted white 1px;
  padding-top: 12px;
  padding-bottom: 12px;
  margin-bottom: 16px;
  display: flex;
  justify-content: space-between;
}

.futureInfoContainer {
  display: flex;
}

.futureInfo {
  flex: 4;
  // height: 200px;
  color: white;
  font-size: 16px;
  line-height: 140%;
  font-family: "spectral";
  border-right: dashed 1px white;
  padding-right: 36px;
}

.futureImage {
  // background-color: blue;
  flex: 3;
  // height: 200px;
}

.futureImageContainer {
  width: 100%;
  height: 200px;
  padding: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.futureImageContainer img {
  // width: 100%;
  height: 200px;
}

.futureImageLabel {
  font-family: "spectral";
  color: white;
  font-size: 14px;
  text-align: center;
}

.yellow {
  color: #fff3a8;
}

.futureStats {
  flex: 5;
  font-family: "spectral";
  text-align: center;
  font-weight: bold;
  letter-spacing: 5%;
  color: white;
}

.label {
  font-family: "spectral";
  font-size: 16px;
  font-family: "spectral";
  text-align: center;
  font-weight: bold;
  letter-spacing: 5%;
  color: white;
  padding-bottom: 24px;
}

.statsContainer {
  display: flex;
  // align-items: center;
  justify-content: center;
  gap: 16px;
}

.innerStatsContainer {
  position: relative; // ✅ Add this to allow absolutely positioned children
  height: 40px;        // ✅ Set a fixed height to contain the stat text
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  flex: 1;
  color: white;
  max-width: 150px;
}

.innerStat {
  position: absolute;  // ✅ Enables one stat to sit on top of the other
  top: 0;
  left: 0;
  width: 100%;
  font-family: "spectral";
  font-size: 36px;
  line-height: 106%;
  font-weight: 200;
  transition: opacity 0.2s ease; // ✅ already here but reinforced
text-align: left;
}

.innerLabel {
  font-family: "spectral";
  font-size: 14px;
  line-height: 120%;
  font-weight: 200;
  text-align: left;
  transform: translateY(42px);
}

/* In your Overview.module.scss or separate CSS file */
.fadeIn {
  opacity: 1;
  transition: opacity 0.4s ease;
}

.fadeOut {
  opacity: 0;
  transition: opacity 0.4s ease;
}

.fadeIn.visible {
  opacity: 1;
}

.fadeTransition {
  transition: opacity 0.4s ease;
}

.innerfutureTitle {
  // position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  transition: opacity 0.4s ease;
  display: flex;
  align-items: center;
  padding-right: 24px;
}

.innerfutureTitleWrapper {
  position: relative;
  height: 32px;
  width: 100% ;

}

.innerStat, .innerfutureTitle {
  // opacity: 1;
  transition: opacity 0.4s ease;
}

.switch {
  // background: red;
  color: white;
  // padding: 4px 4px;
  cursor: pointer;
  z-index: 1000;
  display: flex;
  gap:8px;
  height: 24px;
}

.switchB{
  height: 24px;
}

.switchB:hover{
  opacity: 50%;

}.labelWrapper {
  color: white; // for parentheses
}

.tagF {
  color: #FB8ED7;
}

.tagP {
  color: #FFF3A8;
}

.tagM {
  color: #F0696B;
}

.tagDefault {
  color: white;
}

.titleButton {
  background: none;
  border: none;
  font: inherit;
  padding: 0px 12px;
  margin: 0;
  color: white;
  cursor: pointer;
  transition: opacity 0.3s ease;
  z-index: 2000;
}

.titleButton:disabled {
  cursor: default;
  opacity: 1;
}

.active {
  opacity: 1;
  // text-decoration: underline;
}

.inactive {
  opacity: 0.45;
}

.inactive:hover {
  opacity: 1;
}

.scrollFadeIn {
  opacity: 0;
  // transform: translateY(30px);
  transition: opacity 0.6s ease, transform 0.6s ease;
  will-change: opacity, transform;
}

.scrollFadeIn.visible {
  opacity: 1;
  transform: translateY(0);
}
